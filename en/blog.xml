<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">NixOS Asia Blog</title><id>https://nixos.asia/en</id><updated>2023-03-05</updated><link href="https://nixos.asia/en/blog" rel="alternate"/><link href="https://nixos.asia/en/blog.xml" rel="self"/><entry><id>blog/replacing-docker-compose</id><title type="text">Replacing docker-compose with Nix for development</title><updated>2023-03-05</updated><link href="https://nixos.asia/en/blog/replacing-docker-compose" rel="alternate"/><summary type="text">Ever since I first started using Nix for development, I have enjoyed the simplicity of setup: nix develop, make the code change and see it work. Thatâ€™s all well and good, but when your project keeps growing, you need to depend on external services like databases, message brokers, etc. And then, a quick search will tell you that docker is the way to go. You include it, add one more step in the setup guide, increasing the barrier to entry for new contributors. Not to mention, eating up all the system resources on my not so powerful, company-provided MacBook.</summary></entry></feed>